{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","App.js","index.js"],"names":["StyledHeader","styled","header","Image","img","Title","h1","Header","src","alt","Main","main","StyledInput","input","StyledButton","button","Meme","div","randomImg","url","width","height","textStyles","TopText","h2","BottomText","MemeGenerator","useState","topText","setTopText","bottomText","setBottomText","setRandomImg","memeImgs","setMemeImgs","useEffect","a","async","fetch","json","then","res","memes","data","handleChange","event","target","name","value","onSubmit","preventDefault","randomNum","Math","floor","random","length","randomMemeUrl","randomMemeWidth","randomMemeHeight","type","placeholder","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"qrBAGA,IAAMA,EAAeC,IAAOC,OAAV,KASZC,EAAQF,IAAOG,IAAV,KAMLC,EAAQJ,IAAOK,GAAV,KAeIC,EAVA,kBACb,kBAACP,EAAD,KACE,kBAACG,EAAD,CACEK,IAAI,iEACJC,IAAI,aAEN,kBAACJ,EAAD,yB,ggCC1BJ,IAAMK,EAAOT,IAAOU,KAAV,KAMJC,EAAcX,IAAOY,MAAV,KAMXC,EAAeb,IAAOc,OAAV,KAcZC,EAAOf,IAAOgB,IAAV,KAEN,gBAAGC,EAAH,EAAGA,UAAH,6CACyBA,EAAUC,IADnC,6BAESD,EAAUE,MAFnB,4BAGUF,EAAUG,OAHpB,UAUEC,EAAU,0WAcVC,EAAUtB,IAAOuB,GAAV,IAETF,GAGEG,EAAaxB,IAAOuB,GAAV,IAEZF,GAuEWI,EApEO,WAAO,IAAD,EACIC,mBAAS,IADb,mBACnBC,EADmB,KACVC,EADU,OAEUF,mBAAS,IAFnB,mBAEnBG,EAFmB,KAEPC,EAFO,OAGQJ,mBAAS,CACzCR,IAAK,gCACLC,MAAO,IACPC,OAAQ,MANgB,mBAGnBH,EAHmB,KAGRc,EAHQ,OAQML,mBAAS,IARf,mBAQnBM,EARmB,KAQTC,EARS,KAkB1BC,qBAAU,WARV,EAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACoBE,MAAM,sCAD1B,cAEMC,OAAOC,MAAK,SAAAC,GAAQ,IACdC,EAAUD,EAAIE,KAAdD,MACRR,EAAYQ,MAJhB,uCAUG,IAEH,IAAME,EAAe,SAAAC,GAAU,IAAD,EACJA,EAAMC,OAAtBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACL,YAATD,EAAqBlB,EAAWmB,GAASjB,EAAciB,IAiBzD,OACE,kBAACtC,EAAD,KACE,0BAAMuC,SAhBW,SAAAJ,GACnBA,EAAMK,iBACN,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWrB,EAASsB,QAChDC,EAAgBvB,EAASkB,GAAWhC,IACpCsC,EAAkBxB,EAASkB,GAAW/B,MACtCsC,EAAmBzB,EAASkB,GAAW9B,OAE7CW,EAAa,CACXb,IAAKqC,EACLpC,MAAOqC,EACPpC,OAAQqC,MAON,kBAAC9C,EAAD,CACE+C,KAAK,OACLZ,KAAK,UACLa,YAAY,WACZZ,MAAOpB,EACPiC,SAAUjB,IAEZ,kBAAChC,EAAD,CACE+C,KAAK,OACLZ,KAAK,aACLa,YAAY,cACZZ,MAAOlB,EACP+B,SAAUjB,IAEZ,kBAAC9B,EAAD,sBAEF,kBAACE,EAAD,CAAME,UAAWA,GACf,kBAACK,EAAD,KAAUK,GACV,kBAACH,EAAD,KAAaK,MClHNgC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f867c1c4.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledHeader = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background: #b80000;\n  padding: 0.5rem 1rem;\n`;\n\nconst Image = styled.img`\n  width: 3.75rem;\n  height: auto;\n  margin-right: 1rem;\n`;\n\nconst Title = styled.h1`\n  color: white;\n  font-size: 2rem;\n`;\n\nconst Header = () => (\n  <StyledHeader>\n    <Image\n      src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\n      alt=\"Problem?\"\n    />\n    <Title>Meme Generator</Title>\n  </StyledHeader>\n);\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n  max-width: 80rem;\n  margin: 3.175rem auto;\n  text-align: center;\n`;\n\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  margin-right: 0.625rem;\n  padding: 0.3125rem 0.375rem;\n`;\n\nconst StyledButton = styled.button`\n  color: #fff;\n  background: #000;\n  padding: 0.3125rem 1rem;\n  font-size: 1rem;\n  line-height: 1.75;\n  border-radius: 0.3125rem;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  box-sizing: border-box;\n`;\n\nconst Meme = styled.div`\n  background-size: 100%;\n  ${({ randomImg }) => `\n    background-image: url('${randomImg.url}');  \n    width: ${randomImg.width}px;\n    height: ${randomImg.height}px;`}\n  max-width: 80rem;\n  margin: 1.5625rem auto;\n  text-align: center;\n  position: relative;\n`;\n\nconst textStyles = ` \n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: 1rem 0;\n  font-size: 2em;\n  font-family: impact;\n  text-transform: uppercase;\n  color: #fff;\n  letter-spacing: 1px;\n  text-shadow: 2px 2px 0 #000, -2px -2px 0 #000, 2px -2px 0 #000,\n    -2px 2px 0 #000, 0px 2px 0 #000, 2px 0px 0 #000, 0px -2px 0 #000,\n    -2px 0px 0 #000, 2px 2px 5px #000;`;\n\nconst TopText = styled.h2`\n  top: 0;\n  ${textStyles}\n`;\n\nconst BottomText = styled.h2`\n  bottom: 0;\n  ${textStyles}\n`;\n\nconst MemeGenerator = () => {\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  const [randomImg, setRandomImg] = useState({\n    url: \"http://i.imgflip.com/1bij.jpg\",\n    width: 568,\n    height: 335\n  });\n  const [memeImgs, setMemeImgs] = useState([]);\n\n  async function fetchData() {\n    const res = await fetch(\"https://api.imgflip.com/get_memes\");\n    res.json().then(res => {\n      const { memes } = res.data;\n      setMemeImgs(memes);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    name === \"topText\" ? setTopText(value) : setBottomText(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const randomNum = Math.floor(Math.random() * memeImgs.length);\n    const randomMemeUrl = memeImgs[randomNum].url;\n    const randomMemeWidth = memeImgs[randomNum].width;\n    const randomMemeHeight = memeImgs[randomNum].height;\n\n    setRandomImg({\n      url: randomMemeUrl,\n      width: randomMemeWidth,\n      height: randomMemeHeight\n    });\n  };\n\n  return (\n    <Main>\n      <form onSubmit={handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"topText\"\n          placeholder=\"Top Text\"\n          value={topText}\n          onChange={handleChange}\n        />\n        <StyledInput\n          type=\"text\"\n          name=\"bottomText\"\n          placeholder=\"Bottom Text\"\n          value={bottomText}\n          onChange={handleChange}\n        />\n        <StyledButton>Random Image</StyledButton>\n      </form>\n      <Meme randomImg={randomImg}>\n        <TopText>{topText}</TopText>\n        <BottomText>{bottomText}</BottomText>\n      </Meme>\n    </Main>\n  );\n};\n\nexport default MemeGenerator;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport MemeGenerator from \"./components/MemeGenerator\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}